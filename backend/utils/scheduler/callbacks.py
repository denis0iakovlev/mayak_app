from utils.db_utils import SessionLocal
from sqlalchemy.orm import Session
from datetime import datetime
from utils.db_model import Booking
from Settings import settings
from utils.bot.sendMsg import _send_text_async
from aiogram import Bot

async def change_status():
    db:Session = SessionLocal()
    try:
        now = datetime.now(settings.tzInfo)
        print(f"Sheduler for api is runned - {now}")
        #–û–±–æ–π—Ç–∏ –≤—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è 
        current_time = now.time().replace(microsecond=0)
        bookings = db.query(Booking).filter(Booking.date == now.date().isoformat(),
                                           Booking.start_time <= current_time ).all()
        for book in bookings:
            if book.status == 0:
                try:
                    book.status = 2
                    print(f"[+] –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ {book.id} –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –≤ —Ä–µ–∂–∏–º –Ω–µ –æ–ø–ª–∞—á–µ–Ω–æ.")
                    db.commit()
                except Exception as e:
                    db.delete(book)
    except Exception as e:
        raise Exception(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—é –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ {str(e)}")
    finally:
        db.close()


async def reminder_job(booking_id, chat_id:int, bot: Bot):
    db:Session = SessionLocal()
    now = datetime.now(settings.tzInfo)
    try:
        booking = db.query(Booking).filter(Booking.id == booking_id).first()
        dt = datetime.strptime(booking.date, "%Y-%m-%d")
        st = datetime.combine(dt, booking.start_time)
        if not booking:
            return
        #–ù–∞ –±—É–¥—É—â–µ–µ –µ—Å–ª–∏ –≤–º–µ—Å—Ç–æ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –±—É–¥–µ–º –º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å
        #–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á—Ç–æ –µ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–æ—Ä–æ –Ω–∞—á–Ω–µ—Ç—Å—è
        msg = f'‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: —á–µ—Ä–µ–∑ {settings.reminder_lead_time} –º–∏–Ω—É—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –±—Ä–æ–Ω—å –∫–æ—Ä—Ç–∞ #{booking.court_id}. –í—Ä–µ–º—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è ({booking.start_time.strftime("%H:%M")}-{booking.end_time.strftime("%H:%M")}). C —É–≤–∞–∂–µ–Ω–∏–µ–º –∞–¥–º–∏–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ—Ä—Ç–æ–≤ –≤ –ª–∏—Ü–µ –ì–î –ñ–µ—Ä–µ–±—Ü–æ–≤–∞ –ê.–ù. üê¥'
        await _send_text_async(bot = bot, chat_id=booking.user_id,text=msg)
    finally:
        db.close()